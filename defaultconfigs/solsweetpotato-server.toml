
[Benefits]
	# A list of diversity value thresholds, in ascending order. When the player's food diversity reaches a threshold,
	# they will get the benefits associated with that threshold.
	#
	#
	thresholds = [3.0, 5.0, 7.0, 10.0, 13.0, 18.0, 25.0, 31.0, 40.0, 52.0, 66.0, 83.0, 100.0]
	# 
	# Define custom benefits here. Each entry in the list corresponds to a benefit that will be obtained
	# at the corresponding diversity threshold defined the list above. For example, the first entry in
	# this list will be applied when the player's food diversity reaches the number in the first entry in
	# the threshold list above.
	# A benefit can also be marked as a detriment. In that case, its activation is reversed.
	# A detriment is applied while the player has less diversity than the threshold,
	# and will be removed when the threshold is reached.
	# Each benefit is a string with the following form: [+/-][type],[registry name],[value] (without the brackets)
	# A leading plus (or the of a symbol) denotes a benefit, while a minus denotes a detriment.
	# The type can either be 'attribute' for attribute modifiers or 'effect' for potion effects
	# Registry names for common vanila attributes are 
	# generic.max_health, generic.knockback_resistance, generic.movement_speed, generic.luck, 
	# generic.attack_damage, generic.attack_speed, generic.armor, generic.armor_toughness 
	# The value of attributes is the numerical number that will be added to that attribute
	# Use a negative number for subtraction. Multiplicative modifiers are not supported.
	# For potion effects, the value is an integer and is the potion effect amplifier. Note
	# that the amplifier is 0 indexed, so minecraft:strength,1 corresponds to Strength II
	#
	# To add multiple benefits to the same threshold, separate them by a semicolon ';'
	# Make sure that you have NO SPACES!
	# As an example, 'attribute,generic.max_health,2;effect,strength,1' will give both +2 max hp
	# and Strength II at the corresponding threshold.
	# 'attribute,generic.attack_damage,1;-effect,slowness,0' will give +1 attack damage at the corresponding threshold
	# and Slowness I below the corresponding threshold.
	#
	#
	benefitsUnparsed = ["attribute,generic.max_health,2", "attribute,generic.max_health,2", "attribute,generic.max_health,2", "attribute,generic.max_health,2", "attribute,generic.max_health,2", "attribute,ars_nouveau:ars_nouveau.perk.flat_max_mana,100", "effect,luck,0", "effect,speed,0", "attribute,generic.armor_toughness,2", "attribute,generic.armor_toughness,2;attribute,ars_nouveau:ars_nouveau.perk.flat_max_mana,300", "attribute,generic.max_health,4", "attribute,generic.max_health,6", "effect,farmersdelight:comfort,0"]
	# The minimum number of foods a player needs to eat before any benefits are applied.
	#
	#
	#Range: 0 ~ 1000
	minFoodsToActivate = 0

[Filtering]
	# Foods in this list won't contribute to food diversity.
	#
	#
	blacklist = ["abnormals_delight:slabdish","minecraft:spider_eye","minecraft:poisonous_potato","minecraft:rotten_flesh","domesticationinnovation:rotten_apple","minecraft:pufferfish","minecraft:chicken","enviromental:duck","farmersrespite:nether_wart_sourdough","duckling:raw_duck","ars_nouveau:bombegranate_pod","farmersdelight:nether_salad","alexsmobs:cosmic_cod","alexsmobs:blobfish","alexsdelight:maggot_salad","ends_delight:roasted_shulker_meat", "ends_delight:shulker_meat", "ends_delight:roasted_shulker_meat_slice", "ends_delight:shulker_meat_slice", "ends_delight:stir_fried_shulker_meat", "farmersdelight:wheat_dough", "farmersrespite:coffee_berries", "farmersdelight:raw_pasta", "ars_nouveau:frostaya_pod", "netherdepthsupgrade:lava_pufferfish", "netherdepthsupgrade:obsidianfish", "netherdepthsupgrade:searing_cod", "netherdepthsupgrade:bonefish", "netherdepthsupgrade:wither_bonefish", "netherdepthsupgrade:blazefish", "netherdepthsupgrade:magmacubefish", "netherdepthsupgrade:glowdine", "netherdepthsupgrade:soulsucker", "nethersdelight:ground_strider", "nethersdelight:warped_moldy_meat", "hexerei:silver_bottle", "domesticationinnovation:sinister_carrot", "miners_delight:squid", "miners_delight:bat_wing"]
	#
	# When this list contains anything, the blacklist is ignored and instead only foods from here count.
	#
	#
	whitelist = []

[Miscellaneous]
	# Whether or not to reset food diversity on death, effectively losing all benefits.
	#
	#
	resetOnDeath = false
	#
	# If true, eating foods outside of survival mode (e.g. creative/adventure) is not tracked.
	#
	#
	limitProgressionToSurvival = false
	#
	# How many foods should be tracked. I.e., how many food items eaten in the past should count toward food diversity.
	# Note that the larger this is, the higher your potential diversity value can be, so keep this mind
	# if you are defining custom thresholds/benefits above.
	# !!!If you update queueSize, and leave the other advanced options unchanged,
	# make sure you change endDecay (below) to match queueSize, or else nothing will change!!!
	#
	#
	#Range: 1 ~ 1000
	queueSize = 20

[Advanced]
	# These config options all affect the technical details of how diversity is calculated.
	# Please look at the explanation on the wiki on the github to see how these values work.
	#
	# Lowest possible diversity contribution a food can give. This is a multiplier, not an
	# absolute value!
	#
	#
	#Range: 0.0 ~ 1.0
	minContribution = 0.0
	#
	# The default diversity value when you eat a food. There is little reason to ever change this.
	#
	#
	#Range: 0.0 ~ 100.0
	defaultContribution = 1.0
	#
	# How many meals in the past should the diversity penalty stop from.
	# **Needs to be less than queueSize and greater than startDecay!!!**
	# Note that if you update queueSize, to retain the default behavior, you need to also
	# set endDecay equal to the queueSize
	#
	#
	#Range: 0 ~ 1000
	endDecay = 20
	#
	# How many meals in the past should the diversity time penalty start to apply.
	# **Needs to be less than queueSize and less than or equal to endDecay!!!**
	#
	#
	#Range: 0 ~ 1000
	startDecay = 6
	#
	# Whether blacklisted foods should still take a spot in the queue, even if they don't contribute any diversity.
	#
	#
	shouldForbiddenCount = true

[Complexity]
	# Define custom complexity values for individual foods here.
	# The complexity value of a food is how much diversity points it gives. 
	# The base diversity value of foods not defined here is equal to defaultContribution.
	# Each entry in the list should be a string defining one food, and the format is [registry name],[value]
	# Note that tags are NOT currently supported.
	#
	#
	complexityUnparsed = ["abnormals_delight:duck_noodles,8","abnormals_delight:venison_with_bamboo_shoots,8","abnormals_delight:seared_venison,5","minecraft:golden_apple,2", "minecraft:enchanted_golden_apple,10", "nethersdelight:plate_of_stuffed_hoglin_snout,8", "nethersdelight:hoglin_ear,6", "nethersdelight:plate_of_stuffed_hoglin_ham,6", "nethersdelight:plate_of_stuffed_hoglin_roast,6", "twilightforest:hydra_chop,4","ends_delight:smoked_dragon_leg,8","ends_delight:roasted_dragon_meat,6", "ends_delight:steamed_dragon_egg,8", "ends_delight:roasted_dragon_meat_cuts,3", "ends_delight:roasted_dragon_steak,12","ends_delight:end_mixed_salad,5", "ends_delight:assorted_salad,6","ends_delight:end_barbecue_stick,4","ends_delight:dragon_leg_with_sauce,8","ends_delight:fried_dragon_egg,12","ends_delight:dragon_meat_stew,6", "ends_delight:ender_congee,3","ends_delight:chorus_fruit_pie_slice,2", "ends_delight:chorus_fruit_popsicle,1.5", "ends_delight:chorus_flower_pie,3", "ends_delight:stuffed_rice_cake,1.5", "ends_delight:ender_sauce,1.5", "ends_delight:bubble_tea,2", "ends_delight:chorus_fruit_milk_tea,1.5","farmersdelight:apple_pie_slice,2", "duckling:holiday_fruit_cake,3", "create_central_kitchen:cherry_pie_slice,2", "create_central_kitchen:truffle_pie_piece,2", "supplementaries:pancake,3", "sprout:water_sausage,2", "kiwiboi:kiwicake,4", "enviromental:truffle_mash,5", "extendedmushrooms:mushroom_bread,2", "farmersrespite:black_cod,4", "farmersrespite:tea_curry,6", "farmersrespite:blazing_chili,4", "ecologics:tropical_stew,3", "brewinandchewin:kimchi,2", "brewinandchewin:mead,3", "brewinandchewin:saccharine_rum,4", "brewinandchewin:pickled_pickles,2", "brewinandchewin:kippers,2", "brewinandchewin:cocoa_fudge,2", "brewinandchewin:flaxen_cheese_wedge,2", "brewinandchewin:scarlet_cheese_wedge,2", "brewinandchewin:pizza_slice,4", "brewinandchewin:fiery_fondue,5", "brewinandchewin:ham_and_cheese_sandwich,3", "brewinandchewin:quiche_slice,3", "brewinandchewin:vegetable_omelet,5", "brewinandchewin:cheesy_pasta,6", "brewinandchewin:creamy_onion_soup,4", "brewinandchewin:scarlet_pierogies,7", "brewinandchewin:horror_lasagna,10", "alexsmobs:sopa_de_macaco,2", "alexsmobs:kangaroo_burger,5", "alexsdelight:gongylidia_bruschetta,3","alexsdelight:kangaroo_stew,3","alexsdelight:acacia_blossom_soup,5","alexsdelight:lobster_pasta,6","alexsdelight:bison_burger,5","alexsdelight:bunfungus_sandwich,4","alexsdelight:kangaroo_pasta,5","ars_nouveau:source_berry_pie,8", "farmersdelight:tomato_sauce,2", "delightful::source_berry_pie_slice,2", "ars_nouveau:source_berry_roll,3", "caupona:acquacotta,2","caupona:bisque,2","caupona:borscht,2","caupona:borscht_cream,3","caupona:congee,2","caupona:cream_of_meat_soup,2","caupona:cream_of_mushroom_soup,2","caupona:custard,2","caupona:dilute_soup,2","caupona:egg_drop_soup,2","caupona:egg_tongsui,2","caupona:fish_chowder,2","caupona:fish_soup,2","caupona:fricassee,2","caupona:goji_tongsui,2","caupona:goulash,2","caupona:gruel,2","caupona:hodgepodge,2","caupona:meat_soup,2","caupona:mushroom_soup,2","caupona:nail_soup,2","caupona:nettle_soup,2","caupona:okroshka,2","caupona:porridge,2","caupona:poultry_soup,2","caupona:pumpkin_soup,2","caupona:pumpkin_soup_cream,3","caupona:rice_pudding,2","caupona:scalded_milk,2","caupona:seaweed_soup,2","caupona:stock,2","caupona:stracciatella,2","caupona:ukha,2","caupona:vegetable_chowder,2","caupona:vegetable_soup,2","caupona:walnut_soup,2","caupona:bone_gelatin,2","caupona:huevos_pericos,2","caupona:sauteed_beef,2","caupona:sauteed_greens,2","caupona:sauteed_hodgepodge,2","caupona:sauteed_meat,2","caupona:sauteed_mushrooms,2","caupona:sauteed_roots,2","caupona:sauteed_seafood,2","caupona:sauteed_vegetables,2","caupona:seared_fillet,2","caupona:seared_poultry,2", "netherdepthsupgrade:lava_pufferfish_roll,3", "netherdepthsupgrade:obsidianfish_roll,3", "netherdepthsupgrade:searing_cod_roll,3", "netherdepthsupgrade:blazefish_roll,3", "netherdepthsupgrade:magmacubefish_roll,3", "netherdepthsupgrade:glowdine_roll,3", "netherdepthsupgrade:soulsucker_roll,3", "netherdepthsupgrade:warped_kelp_roll,6", "netherdepthsupgrade:warped_kelp_roll_slice,2", "netherdepthsupgrade:grilled_lava_pufferfish,4", "netherdepthsupgrade:grilled_obsidianfish,4", "netherdepthsupgrade:grilled_searing_cod,4", "netherdepthsupgrade:grilled_blazefish,4", "netherdepthsupgrade:grilled_magmacubefish,4", "netherdepthsupgrade:grilled_glowdine,4", "netherdepthsupgrade:grilled_soulsucker,4", "netherdepthsupgrade:baked_lava_pufferfish_stew,4", "netherdepthsupgrade:baked_obsidianfish_stew,4", "netherdepthsupgrade:baked_searing_cod_stew,4", "netherdepthsupgrade:baked_blazefish_stew,4", "netherdepthsupgrade:baked_magmacubefish_stew,4", "netherdepthsupgrade:baked_glowdine_stew,4", "netherdepthsupgrade:baked_soulsucker_stew,4", "better_fishing_rods:cooked_meat_bundle,4", "nethersdelight:grilled_strider,5", "nethersdelight:strider_moss_stew,5", "nethersdelight:nether_skewer,3", "nethersdelight:magma_gelatin,3", "collectorsreap:glazed_strider,4", "collectorsreap:spicy_grenadine_jelly,4", "miners_delight:improvised_barbecue_stick,3", "miners_delight:pasta_with_veggieballs,5", "miners_delight:cave_soup,4", "miners_delight:bowl_of_stuffed_squid,3", "miners_delight:beetroot_soup_cup,3", "miners_delight:noodle_soup_cup,5", "miners_delight:cave_soup_cup,4", "miners_delight:pumpkin_soup_cup,4", "miners_delight:vegetable_soup_cup,4", "miners_delight:mushroom_stew_cup,2", "miners_delight:beef_stew_cup,3", "miners_delight:rabbit_stew_cup,4", "miners_delight:baked_cod_stew_cup,4", "miners_delight:fish_stew_cup,4", "miners_delight:hot_cocoa_cup,4", "farmersdelight:pie_crust,2", "farmersdelight:sweet_berry_cheesecake_slice,2", "farmersdelight:chocolate_pie_slice,2", "farmersdelight:melon_popsicle,3", "farmersdelight:glow_berry_custard,4", "farmersdelight:fruit_salad,6", "farmersdelight:mixed_salad,3", "farmersdelight:barbecue_stick,3", "farmersdelight:egg_sandwich,3", "farmersdelight:chicken_sandwich,4", "farmersdelight:hamburger,5", "farmersdelight:bacon_sandwich,4", "farmersdelight:mutton_wrap,4", "farmersdelight:dumplings,2", "farmersdelight:stuffed_potato,3", "farmersdelight:cabbage_rolls,2", "farmersdelight:salmon_roll,1.5", "farmersdelight:cod_roll,1.5", "farmersdelight:kelp_roll,6", "farmersdelight:kelp_roll_slice,2", "farmersdelight:cooked_rice,1.5", "farmersdelight:bone_broth,2", "farmersdelight:beef_stew,3", "farmersdelight:chicken_soup,4", "farmersdelight:vegetable_soup,4", "farmersdelight:fish_stew,4", "farmersdelight:fried_rice,5", "farmersdelight:pumpkin_soup,4", "farmersdelight:baked_cod_stew,4", "farmersdelight:noodle_soup,5", "farmersdelight:bacon_and_eggs,4", "farmersdelight:pasta_with_meatballs,5", "farmersdelight:pasta_with_mutton_chop,5", "farmersdelight:mushroom_rice,4", "farmersdelight:roasted_mutton_chops,5", "farmersdelight:vegetable_noodles,6", "farmersdelight:steak_and_potatoes,5", "farmersdelight:ratatouille,4", "farmersdelight:squid_ink_pasta,5", "farmersdelight:grilled_salmon,4", "farmersdelight:roast_chicken,3", "farmersdelight:stuffed_pumpkin,3", "farmersdelight:honey_glazed_ham,3", "farmersdelight:shepherds_pie,3"]

